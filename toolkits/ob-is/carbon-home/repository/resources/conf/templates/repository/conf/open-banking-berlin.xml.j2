<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Copyright (c) 2021-2022, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.
 ~
 ~ This software is the property of WSO2 LLC. and its suppliers, if any.
 ~ Dissemination of any information or reproduction of any material contained
 ~ herein in any form is strictly forbidden, unless permitted by WSO2 expressly.
 ~ You may not alter or remove any copyright or other notice from copies of this content.
-->

<Server xmlns="http://wso2.org/projects/carbon/open-banking-berlin.xml">
    <ConsentManagement>
        {% if open_banking_berlin.consent.payable_account_retrieval_endpoint is defined %}
        <PayableAccountsRetrieveEndpoint>{{open_banking_berlin.consent.payable_account_retrieval_endpoint}}</PayableAccountsRetrieveEndpoint>
        {% else %}
        <PayableAccountsRetrieveEndpoint></PayableAccountsRetrieveEndpoint>
        {% endif %}

        {% if open_banking_berlin.consent.shareable_account_retrieval_endpoint is defined %}
        <ShareableAccountsRetrieveEndpoint>{{open_banking_berlin.consent.shareable_account_retrieval_endpoint}}</ShareableAccountsRetrieveEndpoint>
        {% else %}
        <ShareableAccountsRetrieveEndpoint></ShareableAccountsRetrieveEndpoint>
        {% endif %}

        <!-- Configurations regarding the Strong Customer Authentication -->
        <SCA>
            {% if open_banking_berlin.consent.sca.required is defined %}
            <Required>{{open_banking_berlin.consent.sca.required}}</Required>
            {% else %}
            <Required>true</Required>
            {% endif %}
            <!--
            Allowed values for SupportedSCAApproaches names are:
            1. REDIRECT (OAUTH2 is subsumed by this)
            2. DECOUPLED
            3. EMBEDDED
            -->
            <SupportedSCAApproaches>
                {% if open_banking_berlin.consent.sca.supported_sca_approach is defined %}
                {% for sca_approach_object in open_banking_berlin.consent.sca.supported_sca_approach %}
                <Approach>
                     <Name>{{sca_approach_object.name}}</Name>
                     <Default>{{sca_approach_object.default.enable}}</Default>
                </Approach>
                {% endfor %}
                {% else %}
                <Approach>
                     <Name>REDIRECT</Name>
                     <Default>true</Default>
                </Approach>
                {% endif %}
            </SupportedSCAApproaches>
            <!--Endpoint to retrieve OIDC Discovery metadata-->
            {% if open_banking_berlin.consent.sca.oauth_metadata_endpoint is defined %}
            <OAuthMetadataEndpoint>{{open_banking_berlin.consent.sca.oauth_metadata_endpoint}}</OAuthMetadataEndpoint>
            {% else %}
            <OAuthMetadataEndpoint>https://APIM_HOSTNAME:8243/.well-known/openid-configuration</OAuthMetadataEndpoint>
            {% endif %}
            <!-- Configure SCA Methods for API responses -->
            <SupportedSCAMethods>
                {% if open_banking_berlin.consent.sca.supported_sca_method is defined %}
                {% for auth_object in open_banking_berlin.consent.sca.supported_sca_method %}
                <Method>
                    <Type>{{auth_object.auth_type}}</Type>
                    <Version>{{auth_object.auth_version}}</Version>
                    <Id>{{auth_object.auth_method_id}}</Id>
                    <Name>{{auth_object.name}}</Name>
                    <MappedApproach>{{auth_object.mapped_approach}}</MappedApproach>
                    <Description>{{auth_object.explanation}}</Description>
                    <Default>{{auth_object.default.enable}}</Default>
                </Method>
                {% endfor %}
                {% else %}
                <Method>
                    <Type>SMS_OTP</Type>
                    <Version>1.0</Version>
                    <Id>sms-otp</Id>
                    <Name>SMS OTP on Mobile</Name>
                    <MappedApproach>REDIRECT</MappedApproach>
                    <Description>SMS based one time password</Description>
                    <Default>true</Default>
                </Method>
                {% endif %}
            </SupportedSCAMethods>
        </SCA>

        <!--
        Allowed values for account reference type
            1. iban
            2. bban
            3. pan
            4. maskedPan
            5. msisdn
        -->
    	<SupportedAccountReferenceTypes>
        {% if open_banking_berlin.consent.supported_acc_ref_types is defined %}
            {% for acc_ref_type in open_banking_berlin.consent.supported_acc_ref_types %}
            <AccountReferenceType>{{acc_ref_type}}</AccountReferenceType>
            {% endfor %}
        {% else %}
            <AccountReferenceType>iban</AccountReferenceType>
            <AccountReferenceType>bban</AccountReferenceType>
            <AccountReferenceType>maskedPan</AccountReferenceType>
        {% endif %}
        </SupportedAccountReferenceTypes>

        <APIVersions>
            {% if open_banking_berlin.consent.api_versions.ais is defined %}
            <AIS>{{open_banking_berlin.consent.api_versions.ais}}</AIS>
            {% else %}
            <AIS>v1</AIS>
            {% endif %}
            {% if open_banking_berlin.consent.api_versions.pis is defined %}
            <PIS>{{open_banking_berlin.consent.api_versions.pis}}</PIS>
            {% else %}
            <PIS>v1</PIS>
            {% endif %}
            {% if open_banking_berlin.consent.api_versions.piis is defined %}
            <PIIS>{{open_banking_berlin.consent.api_versions.piis}}</PIIS>
            {% else %}
            <PIIS>v2</PIIS>
            {% endif %}
        </APIVersions>

        <!-- Supported code challenge methods -->
        <SupportedCodeChallengeMethods>
            {%for method in open_banking_berlin.consent.supported_challenge_methods%}
            <Method>{{method}}</Method>
            {% endfor %}
        </SupportedCodeChallengeMethods>

        <Accounts>
            <!--Enable IBAN validation for single accounts -->
            {% if open_banking_berlin.consent.accounts.single_acc_no_retrieval_validation.enable is defined %}
            <EnableAccountIDValidation>{{open_banking_berlin.consent.accounts.single_acc_no_retrieval_validation.enable}}</EnableAccountIDValidation>
            {% else %}
            <EnableAccountIDValidation>false</EnableAccountIDValidation>
            {% endif %}

            <!-- Enable frequency per day throttling for eligible API GET calls -->
            <!--Minimum value is 4 unless agreed bilaterally between TPP and ASPSP-->
            <FrequencyPerDay>
                {% if open_banking_berlin.consent.accounts.freq_per_day.value is defined %}
                <Frequency>{{open_banking_berlin.consent.accounts.freq_per_day.value}}</Frequency>
                {% else %}
                <Frequency>4</Frequency>
                {% endif %}
            </FrequencyPerDay>

            <!-- Enable validUntil Date cap for Account Consent Creation -->
            <ValidUntilDateCap>
                {% if open_banking_berlin.consent.accounts.valid_until_date_cap.enable is defined %}
                <Enabled>{{open_banking_berlin.consent.accounts.valid_until_date_cap.enable}}</Enabled>
                {% else %}
                <Enabled>false</Enabled>
                {% endif %}
                {% if open_banking_berlin.consent.accounts.valid_until_date_cap.value is defined %}
                <ValidUntilDays>{{open_banking_berlin.consent.accounts.valid_until_date_cap.value}}</ValidUntilDays>
                {% else %}
                <ValidUntilDays>0</ValidUntilDays>
                {% endif %}
            </ValidUntilDateCap>

            <!-- Support for multiple recurring consents on AIS resources -->
            {% if open_banking_berlin.consent.accounts.multiple_recurring_consent.enable is defined %}
            <EnableMultipleRecurringConsent>{{open_banking_berlin.consent.accounts.multiple_recurring_consent.enable}}</EnableMultipleRecurringConsent>
            {% else %}
            <EnableMultipleRecurringConsent>false</EnableMultipleRecurringConsent>
            {% endif %}
        </Accounts>

        <Payments>
            {% if open_banking_berlin.consent.payments.auth_cancellation.enable is defined %}
            <PaymentsBackendURL>{{open_banking_berlin.consent.payments.backend_url}}</PaymentsBackendURL>
            {% else %}
            <PaymentsBackendURL>https://APIM_HOSTNAME:9443/api/openbanking/berlin/backend/services/payments</PaymentsBackendURL>
            {% endif %}
            {% if open_banking_berlin.consent.payments.auth_cancellation.enable is defined %}
            <AuthorizeCancellation>{{open_banking_berlin.consent.payments.auth_cancellation.enable}}</AuthorizeCancellation>
            {% else %}
            <AuthorizeCancellation>false</AuthorizeCancellation>
            {% endif %}
            <SinglePayments></SinglePayments>
            <BulkPayments>
                {% if open_banking_berlin.consent.payments.bulk_payments.max_future_payment_days is defined %}
                <MaximumFuturePaymentDays>{{open_banking_berlin.consent.payments.bulk_payments.max_future_payment_days}}</MaximumFuturePaymentDays>
                {% else %}
                <MaximumFuturePaymentDays></MaximumFuturePaymentDays>
                {% endif %}
            </BulkPayments>
            <PeriodicPayments></PeriodicPayments>
            {% if open_banking_berlin.consent.payments.debtor_acc_currency_validation.enable is defined %}
            <EnableDebtorAccountCurrencyValidation>{{open_banking_berlin.consent.payments.debtor_acc_currency_validation.enable}}</EnableDebtorAccountCurrencyValidation>
            {% else %}
            <EnableDebtorAccountCurrencyValidation>true</EnableDebtorAccountCurrencyValidation>
            {% endif %}
        </Payments>

        <COF>
            <!--Enable IBAN validation for single accounts -->
            {% if open_banking_berlin.consent.cof.single_acc_no_retrieval_validation.enable is defined %}
            <EnableAccountIDValidation>{{open_banking_berlin.consent.cof.single_acc_no_retrieval_validation.enable}}</EnableAccountIDValidation>
            {% else %}
            <EnableAccountIDValidation>false</EnableAccountIDValidation>
            {% endif %}
        </COF>
    </ConsentManagement>
</Server>
